version: '3.8'

services:
  # API de teste
  api:
    build: ./api
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - JWT_SECRET=k6-test-secret-key
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) }).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    restart: unless-stopped
    networks:
      - k6-network

  # InfluxDB para armazenar métricas do k6
  influxdb:
    image: influxdb:1.8
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=k6
      - INFLUXDB_USER=k6
      - INFLUXDB_USER_PASSWORD=k6password
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=adminpassword
    volumes:
      - influxdb-storage:/var/lib/influxdb
    networks:
      - k6-network
    restart: unless-stopped

  # Grafana para visualização das métricas
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - influxdb
    networks:
      - k6-network
    restart: unless-stopped

  # k6 para executar testes (opcional, pode ser executado localmente)
  k6:
    image: grafana/k6:latest
    ports:
      - "6565:6565"
    environment:
      - K6_OUT=influxdb=http://influxdb:8086/k6
    volumes:
      - ./k6-tests:/scripts
    depends_on:
      - api
      - influxdb
    networks:
      - k6-network
    profiles:
      - testing
    command: run --out influxdb=http://influxdb:8086/k6 /scripts/load-test.js

  # Nginx para load balancing (opcional, para testes mais avançados)
  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
    networks:
      - k6-network
    profiles:
      - loadbalancer

volumes:
  influxdb-storage:
  grafana-storage:

networks:
  k6-network:
    driver: bridge